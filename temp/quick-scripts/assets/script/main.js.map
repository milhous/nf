{"version":3,"sources":["main.js"],"names":["SceneType","cc","Enum","INDEX","FORM","JOIN","CHOOSE","PUZZLE","SUCCEED","Scene","Class","name","properties","type","default","node","Node","extends","Component","ctor","_duration","_sceneIndex","_id","scenes","btnPass","btnSubmit","btnJoin","btnAgain","btnGet","puzzle","video","VideoPlayer","inputUsername","EditBox","inputMoblie","onLoad","manager","director","getCollisionManager","enabled","getComponent","on","EventType","TOUCH_END","handleSubmit","handleJoin","handleAgain","handleGet","handlePass","handleReady","handleClick","handleCompleted","evt","log","detail","puzzleSucceed","updateBlock","index","nextScene","start","update","dt","play","window","WeixinJSBridge","invoke","document","addEventListener","destroy","aniBtn","req","username","string","mobile","alert","test","Number","sendRequest","path","method","data","phone","then","id","error","prevScene","location","href","status","value","map","obj","active","btn","action","repeatForever","sequence","scaleTo","runAction","extraUrl","Promise","resolve","reject","xhr","loader","getXMLHttpRequest","requestURL","params","Object","keys","key","encodeURIComponent","join","timeout","sys","isNative","setRequestHeader","open","onload","responseText","length","JSON","parse","statusText","onerror","send"],"mappings":"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","file":"main.js","sourceRoot":"../../../../assets/script","sourcesContent":["// 场景\nconst SceneType = cc.Enum({\n    INDEX: 0,\n    FORM: 1,\n    JOIN: 2,\n    CHOOSE: 3,\n    PUZZLE: 4,\n    SUCCEED: 5\n});\n\nconst Scene = cc.Class({\n    name: 'Scene',\n    properties: {\n        type: {\n            default: SceneType.INDEX,\n            type: SceneType\n        },\n        node: cc.Node\n    }\n});\n\ncc.Class({\n    extends: cc.Component,\n\n    ctor() {\n        // 动画时间\n        this._duration = .3;\n        // 场景索引值\n        this._sceneIndex = 0;\n        // 用户ID\n        this._id = null;\n    },\n\n    properties: {\n        scenes: {\n            default: [],\n            type: Scene\n        },\n        btnPass: {\n            default: null,\n            type: cc.Node\n        },\n        btnSubmit: {\n            default: null,\n            type: cc.Node\n        },\n        btnJoin: {\n            default: null,\n            type: cc.Node\n        },\n        btnAgain: {\n            default: null,\n            type: cc.Node\n        },\n        btnGet: {\n            default: null,\n            type: cc.Node\n        },\n        puzzle: {\n            default: null,\n            type: cc.Node\n        },\n        video: {\n            default: null,\n            type: cc.VideoPlayer\n        },\n        inputUsername: {\n            default: null,\n            type: cc.EditBox\n        },\n        inputMoblie: {\n            default: null,\n            type: cc.EditBox\n        }\n    },\n\n    onLoad() {\n        // 开启碰撞\n        const manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n\n        // 初始化组件\n        this.puzzle = this.puzzle.getComponent('puzzle');\n\n        // 定义事件\n        this.btnSubmit.on(cc.Node.EventType.TOUCH_END, this.handleSubmit, this);\n\n        this.btnJoin.on(cc.Node.EventType.TOUCH_END, this.handleJoin, this);\n\n        this.btnAgain.on(cc.Node.EventType.TOUCH_END, this.handleAgain, this);\n\n        this.btnGet.on(cc.Node.EventType.TOUCH_END, this.handleGet, this);\n\n        this.btnPass.on(cc.Node.EventType.TOUCH_END, this.handlePass, this);\n\n        this.video.node.on('ready-to-play', this.handleReady, this);\n        this.video.node.on('clicked', this.handleClick, this);\n        this.video.node.on('completed', this.handleCompleted, this);\n\n        this.node.on('nextScene', (evt) => {\n            cc.log(evt.detail);\n\n            this.puzzleSucceed();\n        });\n\n        this.node.on('choosePuzzle', (evt) => {\n            cc.log(evt.detail);\n\n            this.puzzle.updateBlock(evt.detail.index);\n\n            this.nextScene();\n        });\n    },\n\n    start() {},\n\n    update(dt) {},\n\n    // 准备视频\n    handleReady(evt) {\n        const video = evt;\n\n        video.play();\n\n        if (window.WeixinJSBridge) {\n            WeixinJSBridge.invoke('getNetworkType', {}, () => {\n                video.play();\n            }, false);\n        } else {\n            document.addEventListener('WeixinJSBridgeReady', () => {\n                WeixinJSBridge.invoke('getNetworkType', {}, () => {\n                    video.play();\n                });\n            }, false);\n        }\n    },\n\n    // 用户点击\n    handleClick(evt) {\n        const video = evt;\n\n        video.play();\n    },\n\n    // 跳过视频\n    handlePass(evt) {\n        this.video.destroy();\n\n        this.nextScene();\n    },\n\n    // 播放完成\n    handleCompleted(evt) {\n        this.aniBtn('btnPass');\n    },\n\n    // 提交表单\n    handleSubmit() {\n        const req = /^(13[0-9]|14[5-9]|15[012356789]|166|17[0-8]|18[0-9]|19[8-9])[0-9]{8}$/;\n        const username = this.inputUsername.string;\n        const mobile = this.inputMoblie.string;\n\n        if (username === '') {\n            alert('请输入您的姓名');\n\n            return;\n        }\n\n        if (mobile === '') {\n            alert('请输入您的手机号码');\n\n            return;\n        } else if (!req.test(Number(mobile))) {\n            alert('请输入有效的手机号码');\n\n            return;\n        }\n\n        this.sendRequest({\n            path: 'recode_user.php',\n            method: 'POST',\n            data: {\n                name: username,\n                phone: mobile\n            }\n        }).then((data) => {\n            this._id = data.id;\n\n            this.nextScene();\n        }, (error) => {\n            alert(error);\n        });\n    },\n\n    // 加入互动\n    handleJoin() {\n        cc.log('加入互动');\n\n        this.nextScene();\n    },\n\n    // 再次挑战\n    handleAgain() {\n        cc.log('再次挑战');\n\n        this.prevScene();\n    },\n\n    // 获取权益\n    handleGet() {\n        location.href = 'https://weapp.wemediacn.com/tnf/north/vipeak/to_auth_page?page_type=user_center';\n    },\n\n    // 拼图成功\n    puzzleSucceed() {\n        this.sendRequest({\n            path: 'recode_game.php',\n            method: 'POST',\n            data: {\n                id: this._id,\n                status: 1\n            }\n        }).then((value) => {\n            this.nextScene();\n        }, (error) => {\n            alert(error);\n        });\n    },\n\n    // 跳转下一个场景\n    nextScene() {\n        this._sceneIndex++;\n\n        this.scenes.map((obj) => {\n            obj.node.active = obj.type === this._sceneIndex;\n        });\n    },\n\n    // 跳转上一个场景\n    prevScene() {\n        this._sceneIndex--;\n\n        if (this._sceneIndex < 0) {\n            this._sceneIndex = 0;\n        }\n\n        this.scenes.map((obj) => {\n            obj.node.active = obj.type === this._sceneIndex;\n        });\n    },\n\n    // 按钮动画\n    aniBtn(btn) {\n        const action = cc.repeatForever(\n            cc.sequence(\n                cc.scaleTo(this._duration, 1.1, 1.1),\n                cc.scaleTo(this._duration, 1, 1)\n            )\n        );\n\n        this[btn].runAction(action);\n    },\n\n    sendRequest({\n        path = '',\n        method = 'GET',\n        data = {},\n        extraUrl = 'http://h5.yuncii.com/nf/interface/'\n    }) {\n        return new Promise((resolve, reject) => {\n            const xhr = cc.loader.getXMLHttpRequest();\n            let requestURL = extraUrl + path;\n            let params = null;\n\n            if (typeof data === 'object') {\n                params = Object.keys(data).map(function(key) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n                }).join('&');\n            }\n\n            xhr.timeout = 5000;\n\n            if (cc.sys.isNative) {\n                xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\", \"text/html;charset=UTF-8\");\n            }\n\n            switch (method) {\n                case 'GET':\n                    if (params !== null) {\n                        requestURL += params;\n                    }\n\n                    xhr.open(method, requestURL, true);\n\n                    break;\n                case 'POST':\n                    xhr.open(method, requestURL, true);\n\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n                    break;\n            }\n\n            xhr.onload = () => {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    cc.log(\"http res(\" + xhr.responseText.length + \"):\" + xhr.responseText);\n\n                    return resolve(JSON.parse(xhr.responseText));\n                } else {\n                    reject(xhr.statusText);\n                }\n            };\n\n            xhr.onerror = () => {\n                reject(xhr.statusText);\n            };\n\n            xhr.send(params);\n        });\n    }\n});"]}