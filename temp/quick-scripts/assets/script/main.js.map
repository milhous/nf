{"version":3,"sources":["main.js"],"names":["SceneType","cc","Enum","INDEX","FORM","JOIN","CHOOSE","PUZZLE","SUCCEED","LIST","Scene","Class","name","properties","type","default","node","Node","extends","Component","ctor","_duration","_sceneIndex","_id","_video","_isPlay","_list","scenes","btnPass","btnSubmit","btnJoin","btnAgain","btnGet","puzzle","video","Sprite","inputUsername","EditBox","inputMoblie","listName","Label","listTel","onLoad","manager","director","getCollisionManager","enabled","getComponent","on","EventType","TOUCH_END","handleSubmit","handleJoin","handleAgain","handleGet","handlePass","evt","log","detail","puzzleSucceed","updateBlock","index","nextScene","initVideo","loader","load","err","json","start","update","dt","getVideoFrame","document","getElementById","play","addEventListener","aniBtn","window","WeixinJSBridge","invoke","width","height","canvas","createElement","Number","ctx","getContext","drawImage","img","Image","src","toDataURL","onload","texture","Texture2D","initWithElement","handleLoadedTexture","spriteFrame","SpriteFrame","pause","Object","keys","length","renderList","toScene","req","username","string","mobile","alert","test","sendRequest","path","method","data","phone","then","id","error","prevScene","location","href","status","value","map","obj","active","btn","action","repeatForever","sequence","scaleTo","runAction","extraUrl","Promise","resolve","reject","xhr","getXMLHttpRequest","requestURL","params","key","encodeURIComponent","join","timeout","sys","isNative","setRequestHeader","open","responseText","JSON","parse","statusText","onerror","send"],"mappings":"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","file":"main.js","sourceRoot":"../../../../assets/script","sourcesContent":["// 场景\nconst SceneType = cc.Enum({\n    INDEX: 0,\n    FORM: 1,\n    JOIN: 2,\n    CHOOSE: 3,\n    PUZZLE: 4,\n    SUCCEED: 5,\n    LIST: 6\n});\n\nconst Scene = cc.Class({\n    name: 'Scene',\n    properties: {\n        type: {\n            default: SceneType.INDEX,\n            type: SceneType\n        },\n        node: cc.Node\n    }\n});\n\ncc.Class({\n    extends: cc.Component,\n\n    ctor() {\n        // 动画时间\n        this._duration = .3;\n        // 场景索引值\n        this._sceneIndex = 0;\n        // 用户ID\n        this._id = null;\n        // 视频\n        this._video = null;\n        // 是否播放\n        this._isPlay = false;\n        // 中奖名单\n        this._list = null;\n    },\n\n    properties: {\n        scenes: {\n            default: [],\n            type: Scene\n        },\n        btnPass: {\n            default: null,\n            type: cc.Node\n        },\n        btnSubmit: {\n            default: null,\n            type: cc.Node\n        },\n        btnJoin: {\n            default: null,\n            type: cc.Node\n        },\n        btnAgain: {\n            default: null,\n            type: cc.Node\n        },\n        btnGet: {\n            default: null,\n            type: cc.Node\n        },\n        puzzle: {\n            default: null,\n            type: cc.Node\n        },\n        video: {\n            default: null,\n            type: cc.Sprite\n        },\n        inputUsername: {\n            default: null,\n            type: cc.EditBox\n        },\n        inputMoblie: {\n            default: null,\n            type: cc.EditBox\n        },\n        listName: {\n            default: [],\n            type: [cc.Label]\n        },\n        listTel: {\n            default: [],\n            type: [cc.Label]\n        }\n    },\n\n    onLoad() {\n        // 开启碰撞\n        const manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n\n        // 初始化组件\n        this.puzzle = this.puzzle.getComponent('puzzle');\n\n        // 定义事件\n        this.btnSubmit.on(cc.Node.EventType.TOUCH_END, this.handleSubmit, this);\n\n        this.btnJoin.on(cc.Node.EventType.TOUCH_END, this.handleJoin, this);\n\n        this.btnAgain.on(cc.Node.EventType.TOUCH_END, this.handleAgain, this);\n\n        this.btnGet.on(cc.Node.EventType.TOUCH_END, this.handleGet, this);\n\n        this.btnPass.on(cc.Node.EventType.TOUCH_END, this.handlePass, this);\n\n        this.node.on('nextScene', (evt) => {\n            cc.log(evt.detail);\n\n            this.puzzleSucceed();\n        });\n\n        this.node.on('choosePuzzle', (evt) => {\n            cc.log(evt.detail);\n\n            this.puzzle.updateBlock(evt.detail.index);\n\n            this.nextScene();\n        });\n\n        this.initVideo();\n\n        // 获取中奖名单\n        cc.loader.load('list.json', (err, json) => {\n            this._list = json;\n\n            cc.log(err, json);\n        });\n    },\n\n    start() {},\n\n    update(dt) {\n        if (this._isPlay && this._video) {\n            this.getVideoFrame();\n        }\n    },\n\n    // 初始化视频\n    initVideo() {\n        const video = document.getElementById('video');\n\n        this._video = video;\n\n        this.video.node.on(cc.Node.EventType.TOUCH_END, () => {\n            if (!this._isPlay) {\n                video.play();\n            }\n        }, this);\n\n        video.addEventListener('play', () => {\n            this._isPlay = true;\n        }, false);\n\n        video.addEventListener('ended', () => {\n            this._isPlay = false;\n\n            this.aniBtn('btnPass');\n        }, false);\n\n        if (window.WeixinJSBridge) {\n            WeixinJSBridge.invoke('getNetworkType', {}, () => {\n                video.play();\n            }, false);\n        } else {\n            document.addEventListener('WeixinJSBridgeReady', () => {\n                WeixinJSBridge.invoke('getNetworkType', {}, () => {\n                    video.play();\n                });\n            }, false);\n        }\n    },\n\n    // 获取视频图片帧\n    getVideoFrame() {\n        const width = video.width;\n        const height = video.height;\n\n        const canvas = document.createElement('canvas');\n        canvas.width = Number(width);\n        canvas.height = Number(height);\n\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        const img = new Image();\n        img.src = canvas.toDataURL('image/jpeg');\n        img.onload = () => {\n            const texture = new cc.Texture2D();\n            texture.initWithElement(img);\n            texture.handleLoadedTexture();\n\n            const spriteFrame = new cc.SpriteFrame(texture);\n\n            this.video.spriteFrame = spriteFrame;\n        }\n    },\n\n    // 跳过视频\n    handlePass(evt) {\n        this._isPlay = false;\n        this._video.pause();\n\n        if (this._list !== null && Object.keys(this._list).length > 0) {\n            this.renderList();\n\n            this.toScene(6);\n        } else {\n            this.nextScene();\n        }\n    },\n\n    // 提交表单\n    handleSubmit() {\n        const req = /^(13[0-9]|14[5-9]|15[012356789]|166|17[0-8]|18[0-9]|19[8-9])[0-9]{8}$/;\n        const username = this.inputUsername.string;\n        const mobile = this.inputMoblie.string;\n\n        if (username === '') {\n            alert('请输入您的姓名');\n\n            return;\n        }\n\n        if (mobile === '') {\n            alert('请输入您的手机号码');\n\n            return;\n        } else if (!req.test(Number(mobile))) {\n            alert('请输入有效的手机号码');\n\n            return;\n        }\n\n        this.sendRequest({\n            path: 'recode_user.php',\n            method: 'POST',\n            data: {\n                name: username,\n                phone: mobile\n            }\n        }).then((data) => {\n            this._id = data.id;\n\n            this.nextScene();\n        }, (error) => {\n            alert(error);\n        });\n    },\n\n    // 加入互动\n    handleJoin() {\n        cc.log('加入互动');\n\n        this.nextScene();\n    },\n\n    // 再次挑战\n    handleAgain() {\n        cc.log('再次挑战');\n\n        this.prevScene();\n    },\n\n    // 获取权益\n    handleGet() {\n        location.href = 'https://weapp.wemediacn.com/tnf/north/vipeak/to_auth_page?page_type=user_center';\n    },\n\n    // 拼图成功\n    puzzleSucceed() {\n        this.sendRequest({\n            path: 'recode_game.php',\n            method: 'POST',\n            data: {\n                id: this._id,\n                status: 1\n            }\n        }).then((value) => {\n            this.nextScene();\n        }, (error) => {\n            alert(error);\n        });\n    },\n\n    // 渲染中间名单\n    renderList() {\n        Object.keys(this._list).map((name, index) => {\n            this.listName[index].string = name;\n            this.listTel[index].string = this._list[name];\n        });\n    },\n\n    // 跳转下一个场景\n    nextScene() {\n        this._sceneIndex++;\n\n        this.scenes.map((obj) => {\n            obj.node.active = obj.type === this._sceneIndex;\n        });\n    },\n\n    // 跳转指定场景\n    toScene(index) {\n        this._sceneIndex = index;\n\n        this.scenes.map((obj) => {\n            obj.node.active = obj.type === this._sceneIndex;\n        });\n    },\n\n    // 跳转上一个场景\n    prevScene() {\n        this._sceneIndex--;\n\n        if (this._sceneIndex < 0) {\n            this._sceneIndex = 0;\n        }\n\n        this.scenes.map((obj) => {\n            obj.node.active = obj.type === this._sceneIndex;\n        });\n    },\n\n    // 按钮动画\n    aniBtn(btn) {\n        const action = cc.repeatForever(\n            cc.sequence(\n                cc.scaleTo(this._duration, 1.1, 1.1),\n                cc.scaleTo(this._duration, 1, 1)\n            )\n        );\n\n        this[btn].runAction(action);\n    },\n\n    sendRequest({\n        path = '',\n        method = 'GET',\n        data = {},\n        extraUrl = 'http://h5.yuncii.com/nf/interface/'\n    }) {\n        return new Promise((resolve, reject) => {\n            const xhr = cc.loader.getXMLHttpRequest();\n            let requestURL = extraUrl + path;\n            let params = null;\n\n            if (typeof data === 'object') {\n                params = Object.keys(data).map(function(key) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n                }).join('&');\n            }\n\n            xhr.timeout = 5000;\n\n            if (cc.sys.isNative) {\n                xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\", \"text/html;charset=UTF-8\");\n            }\n\n            switch (method) {\n                case 'GET':\n                    if (params !== null) {\n                        requestURL += params;\n                    }\n\n                    xhr.open(method, requestURL, true);\n\n                    break;\n                case 'POST':\n                    xhr.open(method, requestURL, true);\n\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n                    break;\n            }\n\n            xhr.onload = () => {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    cc.log(\"http res(\" + xhr.responseText.length + \"):\" + xhr.responseText);\n\n                    return resolve(JSON.parse(xhr.responseText));\n                } else {\n                    reject(xhr.statusText);\n                }\n            };\n\n            xhr.onerror = () => {\n                reject(xhr.statusText);\n            };\n\n            xhr.send(params);\n        });\n    }\n});"]}