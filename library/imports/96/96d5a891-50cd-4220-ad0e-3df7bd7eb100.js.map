{"version":3,"sources":["../../../../assets/script/assets/script/choose.js"],"names":["cc","Class","extends","Component","properties","list","default","type","Node","swiper","panel","btnPrev","btnNext","ctor","_duration","_index","_isSwiper","onLoad","on","EventType","TOUCH_END","handlePrev","handleNext","handleEnd","start","aniBtn","btn","offsetX","action","repeatForever","sequence","moveBy","runAction","handleChoose","index","customEvent","Event","EventCustom","setUserData","msg","node","dispatchEvent","evt","swiperPuzzle","length","x","y","width","place","v2","moveTo","callFunc","startLoc","getStartLocation","endLoc","getLocation","log","equals","span","sub","Math","abs","getIndexByPoint","point","itemIndex","map","item","polygonCollider","getComponent","PolygonCollider","Intersection","pointInPolygon","world","points"],"mappings":"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","file":"choose.js","sourceRoot":"../../../../assets/script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        list: {\n            default: [],\n            type: [cc.Node]\n        },\n        swiper: {\n            default: null,\n            type: cc.Node\n        },\n        panel: {\n            default: null,\n            type: cc.Node\n        },\n        btnPrev: {\n            default: null,\n            type: cc.Node\n        },\n        btnNext: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    ctor() {\n        // 动画时间\n        this._duration = .6;\n        // 当前索引值\n        this._index = 1;\n        // 是否可切换\n        this._isSwiper = true;\n    },\n\n    onLoad() {\n        this.btnPrev.on(cc.Node.EventType.TOUCH_END, this.handlePrev, this);\n        this.btnNext.on(cc.Node.EventType.TOUCH_END, this.handleNext, this);\n\n        this.panel.on(cc.Node.EventType.TOUCH_END, this.handleEnd, this);\n    },\n\n    start() {\n        this.aniBtn('btnPrev', -20);\n\n        this.aniBtn('btnNext', 20);\n    },\n\n    // 按钮动画\n    aniBtn(btn, offsetX) {\n        const action = cc.repeatForever(\n            cc.sequence(\n                cc.moveBy(this._duration, offsetX, 0),\n                cc.moveBy(this._duration, -offsetX, 0)\n            )\n        );\n\n        this[btn].runAction(action);\n    },\n\n    // 选择图片\n    handleChoose(index) {\n        const customEvent = new cc.Event.EventCustom('choosePuzzle', true);\n\n        customEvent.setUserData({\n            msg: '选择图片',\n            index\n        });\n\n        this.node.dispatchEvent(customEvent);\n    },\n\n    // 上一页\n    handlePrev(evt) {\n        if (this._index === 0 || !this._isSwiper) {\n            return;\n        }\n\n        this._index--;\n\n        this.swiperPuzzle();\n    },\n\n    // 下一页\n    handleNext(evt) {\n        if (this._index === this.list.length - 1 || !this._isSwiper) {\n            return;\n        }\n\n        this._index++;\n\n        this.swiperPuzzle();\n    },\n\n    // 切换拼图\n    swiperPuzzle() {\n        const index = this.list.length - (4 - this._index);\n        const x = this.swiper.x;\n        const y = this.swiper.y;\n        const offsetX = this.swiper.width / 3;\n\n        this._isSwiper = false;\n\n        const action = cc.sequence(\n            cc.place(cc.v2(x, y)),\n            cc.moveTo(this._duration, cc.v2(offsetX * index, y)),\n            cc.place(cc.v2(offsetX * index, y)),\n            cc.callFunc(() => {\n                this._isSwiper = true;\n            }, this)\n        );\n\n        this.swiper.runAction(action);\n    },\n\n    // 触摸结束\n    handleEnd(evt) {\n        const startLoc = evt.getStartLocation();\n        const endLoc = evt.getLocation();\n\n        cc.log(startLoc.equals(endLoc));\n\n        // 判断两个向量是否相等\n        if (!startLoc.equals(endLoc)) {\n            const span = endLoc.sub(startLoc);\n\n            //认定为水平方向滑动\n            if (Math.abs(span.x) > Math.abs(span.y)) {\n                if (span.x > 30) { //向右\n                    this.handleNext(evt);\n                } else if (span.x < -30) { //向左\n                    this.handlePrev(evt);\n                }\n            }\n        } else {\n            const index = this.getIndexByPoint(endLoc);\n\n            if (index !== null) {\n                this.handleChoose(index);\n            }\n        }\n    },\n\n    /*\n     * 通过坐标获取对应索引值\n     * @param (object) point 坐标点\n     */\n    getIndexByPoint(point) {\n        let itemIndex = null;\n\n        this.list.map((item, index) => {\n            const polygonCollider = item.getComponent(cc.PolygonCollider);\n\n            if (cc.Intersection.pointInPolygon(point, polygonCollider.world.points)) {\n                itemIndex = index;\n            }\n        });\n\n        return itemIndex;\n    }\n});"]}