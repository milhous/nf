{"version":3,"sources":["../../../../assets/script/assets/script/puzzle.js"],"names":["cc","Class","extends","Component","properties","btnAgain","default","type","Node","blocks","themeOne","SpriteFrame","themeTwo","themeThree","ctor","_id","_startBlock","onLoad","node","on","EventType","TOUCH_START","handleStart","TOUCH_MOVE","handleMove","TOUCH_END","handleEnd","start","update","dt","evt","touchLoc","touch","getLocation","block","getBlockByPoint","startPoint","getPosition","endPoint","startIndex","puzzleIndex","endIndex","setPosition","sortPuzzleId","checkPuzzleId","point","result","filter","polygonCollider","getChildByName","getComponent","PolygonCollider","Intersection","pointInPolygon","world","points","updateBlock","themeIndex","arr","getRandomOrder","theme","getThemeSpriteFrame","map","index","puzzleId","spriteFrame","sprite","Sprite","id","Array","from","length","Math","floor","random","item","splice","undefined","push","sp","toString","action","sequence","delayTime","callFunc","customEvent","Event","EventCustom","setUserData","msg","dispatchEvent","runAction","sort","a","b"],"mappings":"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","file":"puzzle.js","sourceRoot":"../../../../assets/script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        btnAgain: {\n            default: null,\n            type: cc.Node\n        },\n        blocks: {\n            default: [],\n            type: [cc.Node]\n        },\n        themeOne: {\n            default: [],\n            type: [cc.SpriteFrame]\n        },\n        themeTwo: {\n            default: [],\n            type: [cc.SpriteFrame]\n        },\n        themeThree: {\n            default: [],\n            type: [cc.SpriteFrame]\n        }\n    },\n\n    ctor() {\n        // 块编号\n        this._id = [0, 1, 2, 3, 4, 5];\n\n        // 起始块\n        this._startBlock = null;\n    },\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.handleStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.handleMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.handleEnd, this);\n    },\n\n    start() {},\n\n    update(dt) {},\n\n    // 选中拼图\n    handleStart(evt) {\n        this._startBlock = null;\n\n        const touchLoc = evt.touch.getLocation();\n\n        const block = this.getBlockByPoint(touchLoc);\n\n        if (block) {\n            this._startBlock = block;\n        }\n    },\n\n    // 移动拼图\n    handleMove(evt) {},\n\n    // 放置拼图\n    handleEnd(evt) {\n        const touchLoc = evt.touch.getLocation();\n\n        const block = this.getBlockByPoint(touchLoc);\n\n        if (this._startBlock && block) {\n            const startPoint = this._startBlock.getPosition();\n            const endPoint = block.getPosition();\n            const startIndex = this._startBlock.puzzleIndex;\n            const endIndex = block.puzzleIndex;\n\n            this._startBlock.puzzleIndex = endIndex;\n            this._startBlock.setPosition(endPoint);\n\n            block.puzzleIndex = startIndex;\n            block.setPosition(startPoint);\n\n            this.sortPuzzleId();\n\n            this.checkPuzzleId();\n        }\n    },\n\n    /*\n     * 通过坐标获取对应块\n     * @param (object) point 坐标点\n     */\n    getBlockByPoint(point) {\n        const result = this.blocks.filter((block) => {\n            const polygonCollider = block.getChildByName('collider').getComponent(cc.PolygonCollider);\n\n            return cc.Intersection.pointInPolygon(point, polygonCollider.world.points);\n        });\n\n        return result[0];\n    },\n\n    /*\n     * 更新块\n     * @param (number) themeIndex 主题索引值\n     */\n    updateBlock(themeIndex) {\n        const arr = this.getRandomOrder();\n        let theme = this.getThemeSpriteFrame(themeIndex);\n\n        this.blocks.map((block, index) => {\n            const puzzleId = arr[index];\n            const spriteFrame = theme[puzzleId];\n            const sprite = block.getComponent(cc.Sprite);\n\n            block.puzzleId = puzzleId;\n            block.puzzleIndex = index;\n\n            sprite.spriteFrame = spriteFrame;\n        });\n\n        this.sortPuzzleId();\n    },\n\n    // 获取随机顺序\n    getRandomOrder() {\n        const id = Array.from(this._id);\n        const arr = [];\n\n        while (id.length > 0) {\n            const index = Math.floor(Math.random() * id.length);\n            const item = id.splice(index, 1);\n\n            if (item[0] !== undefined) {\n                arr.push(item[0]);\n            }\n        }\n\n        return arr;\n    },\n\n    /*\n     * 获取主题纹理\n     * @param (number) index 主题索引值\n     */\n    getThemeSpriteFrame(index) {\n        let sp = null;\n\n        switch (index) {\n            case 0:\n                sp = this.themeOne;\n\n                break;\n            case 1:\n                sp = this.themeTwo;\n\n                break;\n\n            case 2:\n                sp = this.themeThree;\n\n                break;\n        }\n\n        return sp;\n    },\n\n    // 检测拼图是否正确\n    checkPuzzleId() {\n        const arr = [];\n\n        this.blocks.map((block, index) => {\n            arr.push(block.puzzleId);\n        });\n\n        if (arr.toString() === this._id.toString()) {\n            const action = cc.sequence(\n                cc.delayTime(1),\n                cc.callFunc(() => {\n                    const customEvent = new cc.Event.EventCustom('nextScene', true);\n                    customEvent.setUserData({\n                        msg: '成功'\n                    });\n\n                    this.node.dispatchEvent(customEvent);\n                }, this)\n            );\n\n            this.node.runAction(action);\n        }\n    },\n\n    // 排序\n    sortPuzzleId() {\n        this.blocks.sort((a, b) => {\n            return a.puzzleIndex - b.puzzleIndex;\n        });\n    }\n});"]}